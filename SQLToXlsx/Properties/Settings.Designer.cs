//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLToXlsx.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("with sell_orders as (\r\n\r\n\r\n    select \r\n\t    o.ContractId\r\n\t  ,cast(o.Datepost as" +
            " date) datepost\r\n\t   ,(case when cast(datepart(hour,Datepost) as int)<13\r\n\t\t\t\t  " +
            "                                                  then 1\r\n\t\t\t\t                  " +
            "                                  when cast(datepart(hour,Datepost) as int)>13\r\n" +
            "\t\t\t\t\t                                                    then 2 end)session\r\n\t  " +
            " ,sum(kolvo) kolvo\r\n\t   ,min (Price) Price\r\n\tfrom aOrders o\r\n\tgroup by \r\n\t o.Con" +
            "tractId\r\n\t,cast(o.Datepost as date)\r\n\t,(case when cast(datepart(hour,Datepost) a" +
            "s int)<13\r\n\t\t\t\t                                                    then 1\r\n\t\t\t\t " +
            "                                                   when cast(datepart(hour,Datep" +
            "ost) as int)>13\r\n\t\t\t\t\t                                                    then 2" +
            " end)\r\n\r\n)\r\n\r\nselect \r\n\r\n  ar.GroupName,\r\n ar.SubGroupName,\r\n  c.name_commod,\r\nc" +
            "ast(bord.Datepost as date) Datepost,\r\n  bord.ContractId,\r\n  c.base_price,\r\n  (ca" +
            "se when cast(datepart(hour,bord.Datepost) as int)<13\r\n\t\t\t\t                      " +
            "                              then \'Утренный\'\r\n\t\t\t\t                             " +
            "                       when cast(datepart(hour,bord.Datepost) as int)>13\r\n\t\t\t\t\t " +
            "                                                   then \'Вечерный\' end)session, " +
            " \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcoalesce(br.Id,\'\') nomerSdelki,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcoalesce" +
            "(js.FullName,\'\') Prodovec,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  coalesce(js.id,\'\') InpProdovec,\r" +
            "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  coalesce(b.SBroker,\'\') BrokerProdovecId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
            "\t  sord.kolvo*c.lot as prodkolvo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  sord.Price prodcena,\r\n\t\t\t" +
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  c.unit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  c.valuta,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jb." +
            "FullName Pokupatel,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jb.id InpPokupatelya,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t" +
            "\t\t  bk.trade_ground TP,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  bord.BrokerID BrokerPokupatelId,\r\n\t" +
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  bord.Kolvo*c.lot as pokupkolvo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  bord.Pri" +
            "ce cenatovara,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  coalesce(b.CostMoney,\'\') CenaSdelki\r\n\t\r\n\t\r\n " +
            "\r\nfrom aOrders bord\r\njoin sell_orders sord on    bord.ContractId = sord.Contract" +
            "Id\r\n\t\t\t\t\t\tand cast(bord.Datepost as date) = sord.datepost\r\n\t\t\t\t\t\tand (case when " +
            "cast(datepart(hour,bord.Datepost) as int)<13\r\n\t\t\t\t                              " +
            "                      then 1\r\n\t\t\t\t                                              " +
            "      when cast(datepart(hour,bord.Datepost) as int)>13\r\n\t\t\t\t\t                  " +
            "                                  then 2 end) = sord.session\r\n\t\t\t\t\t\t\r\nleft join " +
            "aBargains br on bord.AppID = br.ord_buyer\r\nleft join Clearing.dbo.Bargain b on b" +
            ".id=br.Id\r\nleft join aContract c on c.id=bord.ContractId\r\nleft join aBrokers bk " +
            "on bk.id=bord.BrokerID\r\nleft join Clearing.dbo.Juridical jb on jb.id=floor(bord." +
            "INP/10)\r\nleft join Clearing.dbo.Juridical js on js.id=b.SAccount\r\nleft join aRep" +
            "ortTen ar on ar.ContractID=c.id\r\nwhere bord.Datepost between \'2019-04-01\' and \'2" +
            "019-05-01\'\r\nand bord.IsProd = 1 \r\norder by br.id desc")]
        public string Query1 {
            get {
                return ((string)(this["Query1"]));
            }
        }
    }
}
